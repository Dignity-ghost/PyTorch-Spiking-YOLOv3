[net]
# Testing
batch=128
subdivisions=1
# Training
# batch=64
# subdivisions=2
width=416
height=416
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.001
burn_in=1000
max_batches = 500200
policy=steps
steps=400000,450000
scales=.1,.1

# 0 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=16
size=3
stride=1
pad=1
groups=1
#activation=leaky
activation=relu

# 1 maxpool/2->conv/2 ->208*208*16
#[maxpool]
#size=2
#stride=2
[convolutional]
batch_normalize=1
filters=16
size=3
stride=2
pad=1
groups=1
activation=relu

# 2 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
groups=1
#activation=leaky
activation=relu

# 3 maxpool/2->conv/2 ->104*104*32
#[maxpool]
#size=2
#stride=2
[convolutional]
batch_normalize=1
filters=32
size=3
stride=2
pad=1
groups=1
activation=relu

# 4 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
groups=1
#activation=leaky
activation=relu

# 5 maxpool/2->conv/2 ->52*52*64
#[maxpool]
#size=2
#stride=2
[convolutional]
batch_normalize=1
filters=64
size=3
stride=2
pad=1
groups=1
activation=relu

# 6 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
groups=1
#activation=leaky
activation=relu

# 7 maxpool/2->conv/2 ->26*26*128
#[maxpool]
#size=2
#stride=2
[convolutional]
batch_normalize=1
filters=128
size=3
stride=2
pad=1
groups=1
activation=relu

# 8 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
groups=1
#activation=leaky
activation=relu

# 9 maxpool/2->conv/2 ->13*13*256
#[maxpool]
#size=2
#stride=2
[convolutional]
batch_normalize=1
filters=256
size=3
stride=2
pad=1
groups=1
activation=relu

# 10 leaky_relu->relu ->13*13*512
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
groups=1
#activation=leaky
activation=relu

# maxpool/1->none
#[maxpool]
#size=2
#stride=1

# 11 leaky_relu->relu ->13*13*1024
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
groups=1
#activation=leaky
activation=relu

###########

# 12 leaky_relu->relu ->13*13*256
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
groups=1
#activation=leaky
activation=relu

# 13 leaky_relu->relu ->13*13*512
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
groups=1
#activation=leaky
activation=relu

# 14
[convolutional]
size=1
stride=1
pad=1
#filters=255
# filters=75
filters=125
groups=1
activation=linear


# 15
[yolo]
mask = 0, 1, 2, 3, 4
#anchors = 10,14,  23,27,  37,58,  81,82,  135,169,  344,319
# anchors = 24,44,  54,89,  82,199,  144,123,  179,268,  346,334
anchors = 42.31,55.41, 102.17,128.30, 161.79,259.17, 303.08,154.90, 359.56,320.23
#classes=80
classes=20
num=6
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1

